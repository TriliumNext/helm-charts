{{- define "trilium.hardcodedValues" -}}
controllers:
  main:
    initContainers:
      fixperms:
        image:
          repository: busybox
          tag: latest
          args: ["sh", "-c", "chown -R {{ .Values.controllers.main.containers.trilium.securityContext.runas | default 1000 }}:{{ .Values.controllers.main.containers.trilium.securityContext.runas | default 1000 }} /home/node/trilium-data"]
        securityContext:
          runAsUser: 0
          runAsGroup: 0
    containers:
      trilium:
        image:
          repository: triliumnext/notes
          tag: v0.90.4
          pullPolicy: IfNotPresent

        probes:
          startup:
            enabled: true
            custom: true
            type: TCP
            spec:
              initialDelaySeconds: 45  # Time to wait before starting the probe
              periodSeconds: 10        # How often to perform the probe
              timeoutSeconds: 5        # Number of seconds after which the probe times out
              failureThreshold: 10     # Number of times to try the probe before giving up
              httpGet: &probesPath
                path: /login
                port: 8080
          readiness: &probes
            enabled: true
            custom: true
            spec:
              initialDelaySeconds: 5   # Time to wait before starting the probe after startup probe succeeds
              periodSeconds: 20        # How often to perform the probe
              timeoutSeconds: 10       # Number of seconds after which the probe times out
              failureThreshold: 3      # Number of times to try the probe before considering the container not ready
              httpGet: *probesPath

          liveness: *probes
        # Defines what user and group the container should run as
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch


persistence:
  data:
    enabled: true
    type: persistentVolumeClaim
    size: 20Gi
    retain: true
    # Since it's SQLite, the PVC should only be RWO
    accessMode: ReadWriteOnce
    globalMounts:
      - path: /home/node/trilium-data
        readOnly: false
  config:
    enabled: true
    type: configMap
    name: {{ .Release.Name }}-config
    readOnly: true
    advancedMounts:
      main:
        trilium:
          - path: /home/node/trilium-data/config.ini
            subPath: config.ini
    


service:
  main:
    controller: main
    enabled: true
    ports:
      http:
        # What port the cluster is listening on
        port: 8080
        # What port the container is listening on
        targetPort: 8080

{{ end }}



{{- $ctx := deepCopy . -}}
# Merge with ALL the values in `values.yaml`
{{- $_ := mergeOverwrite .Values $ctx.Values -}}
{{- $_ = include "trilium.hardcodedValues" . | fromYaml | merge $ctx.Values -}}
{{- include "bjw-s.common.loader.all" $ctx }}
